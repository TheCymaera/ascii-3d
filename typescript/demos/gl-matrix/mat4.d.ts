export function create(): mat4;
export function clone(a: ReadonlyMat4): mat4;
export function copy(out: mat4, a: ReadonlyMat4): mat4;
export function fromValues(m00: number, m01: number, m02: number, m03: number, m10: number, m11: number, m12: number, m13: number, m20: number, m21: number, m22: number, m23: number, m30: number, m31: number, m32: number, m33: number): mat4;
export function set(out: mat4, m00: number, m01: number, m02: number, m03: number, m10: number, m11: number, m12: number, m13: number, m20: number, m21: number, m22: number, m23: number, m30: number, m31: number, m32: number, m33: number): mat4;
export function identity(out: mat4): mat4;
export function transpose(out: mat4, a: ReadonlyMat4): mat4;
export function invert(out: mat4, a: ReadonlyMat4): mat4;
export function adjoint(out: mat4, a: ReadonlyMat4): mat4;
export function determinant(a: ReadonlyMat4): number;
export function multiply(out: mat4, a: ReadonlyMat4, b: ReadonlyMat4): mat4;
export function translate(out: mat4, a: ReadonlyMat4, v: ReadonlyVec3): mat4;
export function scale(out: mat4, a: ReadonlyMat4, v: ReadonlyVec3): mat4;
export function rotate(out: mat4, a: ReadonlyMat4, rad: number, axis: ReadonlyVec3): mat4;
export function rotateX(out: mat4, a: ReadonlyMat4, rad: number): mat4;
export function rotateY(out: mat4, a: ReadonlyMat4, rad: number): mat4;
export function rotateZ(out: mat4, a: ReadonlyMat4, rad: number): mat4;
export function fromTranslation(out: mat4, v: ReadonlyVec3): mat4;
export function fromScaling(out: mat4, v: ReadonlyVec3): mat4;
export function fromRotation(out: mat4, rad: number, axis: ReadonlyVec3): mat4;
export function fromXRotation(out: mat4, rad: number): mat4;
export function fromYRotation(out: mat4, rad: number): mat4;
export function fromZRotation(out: mat4, rad: number): mat4;
export function fromRotationTranslation(out: mat4, q: quat4, v: ReadonlyVec3): mat4;
export function fromQuat2(out: mat4, a: ReadonlyQuat2): mat4;
export function getTranslation(out: vec3, mat: ReadonlyMat4): vec3;
export function getScaling(out: vec3, mat: ReadonlyMat4): vec3;
export function getRotation(out: quat, mat: ReadonlyMat4): quat;
export function decompose(out_r: quat, out_t: vec3, out_s: vec3, mat: ReadonlyMat4): quat;
export function fromRotationTranslationScale(out: mat4, q: quat4, v: ReadonlyVec3, s: ReadonlyVec3): mat4;
export function fromRotationTranslationScaleOrigin(out: mat4, q: quat4, v: ReadonlyVec3, s: ReadonlyVec3, o: ReadonlyVec3): mat4;
export function fromQuat(out: mat4, q: ReadonlyQuat): mat4;
export function frustum(out: mat4, left: number, right: number, bottom: number, top: number, near: number, far: number): mat4;
export function perspective(out: mat4, fovy: number, aspect: number, near: number, far: number): mat4;
export function perspectiveFromFieldOfView(out: mat4, fov: any, near: number, far: number): mat4;
export function ortho(out: mat4, left: number, right: number, bottom: number, top: number, near: number, far: number): mat4;
export function lookAt(out: mat4, eye: ReadonlyVec3, center: ReadonlyVec3, up: ReadonlyVec3): mat4;
export function targetTo(out: mat4, eye: ReadonlyVec3, target: ReadonlyVec3, up: ReadonlyVec3): mat4;
export function str(a: ReadonlyMat4): string;
export function frob(a: ReadonlyMat4): number;
export function add(out: mat4, a: ReadonlyMat4, b: ReadonlyMat4): mat4;
export function subtract(out: mat4, a: ReadonlyMat4, b: ReadonlyMat4): mat4;
export function multiplyScalar(out: mat4, a: ReadonlyMat4, b: number): mat4;
export function multiplyScalarAndAdd(out: mat4, a: ReadonlyMat4, b: ReadonlyMat4, scale: number): mat4;
export function exactEquals(a: ReadonlyMat4, b: ReadonlyMat4): boolean;
export function equals(a: ReadonlyMat4, b: ReadonlyMat4): boolean;
export function mul(out: mat4, a: ReadonlyMat4, b: ReadonlyMat4): mat4;
export function sub(out: mat4, a: ReadonlyMat4, b: ReadonlyMat4): mat4;
